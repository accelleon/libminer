use serde::Deserialize;
use crate::{
    error::Error,
    miners::common::{StatsResp, StatusCode, AvaStats, Stats}
};
use super::{
    asc::PowerSupplyInfo,
    de,
};

#[derive(Deserialize, Debug)]
pub struct Status {
    #[serde(rename = "STATUS")]
    pub status: StatusCode,
    // Whatsminer doesn't always return When or Code
    #[serde(rename = "When")]
    pub when: Option<usize>,
    #[serde(rename = "Code")]
    pub code: Option<usize>,
    #[serde(rename = "Msg")]
    pub msg: String,
    #[serde(rename = "Description")]
    pub description: Option<String>,
}

#[derive(Deserialize, Debug)]
pub struct SysStatus {
    /// Whether the mining is hashing (== "In Work")
    #[serde(rename = "Work")]
    pub work: String,
    /// Number of hashboards
    #[serde(rename = "Hash Board")]
    pub nboards: u8,
}

#[derive(Deserialize, Debug)]
#[serde(rename_all = "PascalCase")]
pub struct RCD {
    pub tenv: i32,
    pub tavg: i32,
    pub fan1: i32,
    pub fan2: i32,
    // This is passed as a unsigned int, but our deserializer should convert to a float
    pub v12: f32,
    pub vout: f32,
    #[serde(rename = "P_I")]
    pub pi: i32,
    #[serde(rename = "P_O")]
    pub po: i32,
}

#[derive(Deserialize, Debug)]
#[serde(rename_all = "UPPERCASE")]
pub struct EStats {
    /// Version marker for the firmware??
    #[serde(rename = "Ver")]
    pub ver: String,
    pub dna: String,
    pub netfail: Vec<i32>,
    #[serde(rename = "SYSTEMSTATU")]
    pub sys_status: SysStatus,
    /// Uptime
    #[serde(rename = "Elapsed")]
    pub elapsed: u64,
    /// Miner's aggregate temperature
    #[serde(rename = "Temp")]
    pub temp: i32,
    /// Max temperature seen by the miner
    #[serde(rename = "TMax")]
    pub tmax: i32,
    /// Average temperature seen by the miner
    #[serde(rename = "TAvg")]
    pub tavg: i32,
    /// Fan1 speed
    #[serde(rename = "Fan1")]
    pub fan1: u32,
    /// Fan2 speed
    #[serde(rename = "Fan2")]
    pub fan2: u32,
    /// Fan3 speed
    #[serde(rename = "Fan3")]
    pub fan3: u32,
    /// Fan4 speed
    #[serde(rename = "Fan4")]
    pub fan4: u32,
    /// Fan PMW signal
    #[serde(rename = "FanR")]
    pub fanr: f64,
    /// Power supply information
    pub ps: PowerSupplyInfo,
    /// Real time hashrate
    #[serde(rename = "GHSmm")]
    pub ghs_mm: f64,
    /// Average hashrate
    #[serde(rename = "GHSavg")]
    pub ghs_av: f64,
    /// Current frequency of the hashboards
    #[serde(rename = "Freq")]
    pub freq: f64,
    /// Led status (0 == off, 1 == on)
    #[serde(rename = "Led")]
    pub led: u8,
    /// Per hashboard hashrate
    pub mghs: Vec<f64>,
    /// Per hashboard max temperature
    #[serde(rename = "MTmax")]
    pub mtmax: Vec<i32>,
    /// Per hashboard average temperature
    #[serde(rename = "MTavg")]
    pub mtavg: Vec<i32>,
}

impl TryFrom<&AvaStats> for EStats {
    type Error = Error;

    fn try_from(stats: &AvaStats) -> Result<Self, Self::Error> {
        match de::from_str(&stats.mm_id0) {
            Ok(stats) => Ok(stats),
            Err(e) => {
                println!("String: {}", stats.mm_id0);
                println!("Error: {}", e);
                Err(e.into())
            },
        }
    }
}

impl TryFrom<&StatsResp> for EStats {
    type Error = Error;

    fn try_from(resp: &StatsResp) -> Result<Self, Self::Error> {
        if resp.status[0].status == StatusCode::ERROR {
            return Err(Error::InvalidResponse);
        }
        if let Some(stats) = &resp.stats {
            if let Some(ref stats) = stats.get(0) {
                match stats {
                    Stats::AvaStats(ref stats) => Self::try_from(stats),
                    _ => Err(Error::InvalidResponse),
                }
            } else {
                Err(Error::InvalidResponse)
            }
        } else {
            Err(Error::InvalidResponse)
        }
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_str() {
        let s = r#"Ver[1246-81-21030201_4ec6bb0_09b1765] DNA[020100000828a153] MEMFREE[1358896.0] NETFAIL[0 0 0 0 0 0 0 0] SYSTEMSTATU[Work: In Work, Hash Board: 3 ] Elapsed[1750] BOOTBY[0x0A.00000002] LW[1730255] MH[80 93 67] HW[240] DH[6.553%] Temp[23] TMax[88] TAvg[66] Fan1[3337] Fan2[3302] Fan3[3302] Fan4[3288] FanR[54%] Vo[310] PS[0 1197 1240 261 3239 1240] PLL0[8235 2234 1835 1616] PLL1[9161 2800 1641 318] PLL2[7297 2653 2197 1773] GHSspd[80521.10] DHspd[6.553%] GHSmm[86564.08] GHSavg[75781.50] WU[1058655.28] Freq[518.22] Led[0] MGHS[25280.59 24670.18 25830.72] MTmax[88 86 81] MTavg[68 62 67] TA[360] Core[A3201] PING[42] POWS[0] HASHS[0 0 0] POOLS[0] SoftOFF[0] ECHU[0 0 0] ECMM[0] SF0[504 524 544 564] SF1[504 524 544 564] SF2[504 524 544 564] PVT_T0[ 79  77  74  72  77  74  71  73  74  76  77  73  71  75  76  76  74  71  71  77  81  83  76  73  70  73  75  78  75  68  66  74  79  86  71  68  68  71  88  87  69  68  65  66  85  82  66  63  62  64  75  68  65  62  60  62  63  64  64  59  57  59  58  59  59  60  60  58  59  63  62  62  61  59  64  71  68  63  64  68  68  65  62  67  67  61  71  63  64  64  64  66  62  70  64  66  67  70  63  74  69  67  66  71  71  69  67  71  69  69  69  64  69  68  71  69  64  71  73  71] PVT_T1[ 61  62  71  69  65  61  62  62  67  66  65  60  62  66  70  68  64  64  68  66  64  70  69  65  64  68  70  67  86  62  64  66  67  65  68  65  66  67  66  65  65  67  64  69  66  64  67  63  63  64  63  63  61  59  58  61  63  63  59  56  57  54  54  52  55  57  57  55  57  59  56  58  57  62  60  68  61  62  59  63  67  61  60  64  60  59  57  59  58  64  64  56  56  60  59  62  64  60  62  61  61  61  58  59  58  56  59  58  59  59  63  59  60  59  60  62  59  58  62  62] PVT_T2[ 68  73  74  77  70  67  69  67  72  76  69  67  68  70  81  80  70  69  70  71  76  76  69  67  66  68  76  73  69  63  66  68  79  74  69  64  67  71  76  74  70  67  68  69  76  77  65  65  62  66  69  69  65  62  63  61  69  68  61  62  58  57  57  56  59  60  60  61  64  64  60  63  62  65  67  71  72  64  60  69  68  71  63  63  64  66  68  64  62  62  61  65  61  67  69  67  63  69  69  69  71  65  66  69  68  68  70  65  62  65  64  67  65  64  67  68  67  67  67  69] PVT_V0[281 287 290 285 286 286 286 285 287 282 279 277 275 274 274 277 281 282 278 278 275 275 279 283 283 282 282 285 282 283 287 290 292 278 283 286 282 283 288 282 285 286 281 283 278 283 289 287 293 291 291 290 291 293 290 298 294 290 287 292 291 292 290 287 290 297 285 291 295 295 298 294 281 283 285 274 275 283 288 288 292 290 297 297 282 289 290 290 293 293 271 275 278 273 274 283 289 289 294 289 289 287 288 286 285 292 293 292 289 290 292 271 281 283 270 278 285 277 282 288] PVT_V1[286 294 293 287 294 295 283 286 291 290 291 289 279 281 283 276 286 286 282 283 284 291 290 287 286 288 285 283 292 284 285 289 289 278 281 285 281 282 285 280 286 283 279 280 281 287 285 286 292 288 291 281 283 285 283 283 285 285 289 294 284 283 283 286 287 291 292 294 295 296 297 297 292 291 294 288 289 290 289 285 286 291 291 287 291 291 291 292 294 293 289 290 292 290 289 288 277 281 280 283 282 283 288 290 291 295 294 294 289 291 289 289 292 290 286 288 290 283 289 289] PVT_V2[291 293 297 286 281 275 285 282 277 281 283 286 278 279 281 286 289 289 286 287 281 279 274 273 273 277 278 275 283 282 279 279 271 288 281 279 276 274 268 287 281 278 292 292 289 276 280 286 275 277 278 282 283 286 283 287 284 278 282 286 301 296 293 283 284 286 291 294 294 293 293 291 297 290 295 293 294 294 282 283 292 281 290 286 302 297 297 294 294 294 292 290 290 293 292 287 277 278 282 271 275 276 277 275 283 291 292 291 291 293 297 288 289 288 291 290 283 292 289 290] MW[581853 581903 581986] MW0[72 92 84 86 108 102 73 98 86 89 78 91 54 76 91 83 77 67 82 68 83 90 82 75 72 77 73 87 77 70 88 91 82 85 81 86 61 69 89 86 77 68 61 84 76 104 98 66 80 89 82 107 95 83 84 67 90 73 89 90 101 84 92 97 97 88 86 90 71 107 96 92 70 76 84 89 83 55 86 104 94 82 86 88 83 70 84 98 95 103 69 88 90 81 82 60 82 86 83 89 76 95 81 95 96 93 75 101 96 78 85 88 58 89 76 93 81 64 98 84] MW1[70 75 89 87 75 93 90 66 105 75 80 99 98 65 72 91 43 91 93 62 84 86 86 84 93 76 85 39 106 87 74 95 76 78 82 78 84 84 72 88 78 83 59 52 78 95 84 58 49 94 91 105 87 87 75 80 81 93 76 87 100 79 57 88 106 92 95 64 85 77 73 87 79 83 87 103 55 90 55 90 105 87 53 95 101 80 80 79 71 94 104 71 64 72 76 103 71 87 72 81 97 83 68 98 101 108 84 86 89 84 78 71 77 52 86 87 85 68 95 87] MW2[88 107 95 78 101 85 66 100 87 85 77 82 70 68 83 104 86 73 86 100 103 80 74 88 83 89 84 92 78 79 70 71 72 91 76 75 68 65 71 77 110 88 94 82 75 66 85 66 75 67 94 104 76 85 100 61 98 97 89 89 85 84 85 72 79 93 97 70 87 87 73 105 93 110 83 85 103 87 97 87 76 105 67 83 101 95 93 100 97 85 88 94 89 87 86 95 95 100 88 54 88 82 79 90 79 95 98 77 100 85 90 82 92 83 90 75 82 98 68 106] ASICCRC0[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] ASICCRC1[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] ASICCRC2[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] CRC[0 0 0] POW_I2C[OK] FACOPTS0[] FACOPTS1[] ATAOPTS0[--avalon10-freq 504:524:544:564 --avalon10-voltage-level 39 ] ATAOPTS1[--avalon10-freq 504:524:544:564 --avalon10-voltage-level 35 ] ADJ[1] COP[0 0 0] MPO[3200] MVL[87] ATABD0[504 524 544 564] ATABD1[504 524 544 564] ATABD2[504 524 544 564] WORKMODE[1]"#;
        let estats: EStats = de::from_str(s).unwrap();
    }

    #[test]
    fn test_resp() {
        let resp = r#"{"STATUS":[{"STATUS":"S","When":1849,"Code":70,"Msg":"CGMiner stats","Description":"cgminer 4.11.1"}],"STATS":[{"STATS":0,"ID":"AVA100","Elapsed":1750,"Calls":0,"Wait":0.000000,"Max":0.000000,"Min":99999999.000000,"MM ID0":"Ver[1246-81-21030201_4ec6bb0_09b1765] DNA[020100000828a153] MEMFREE[1358896.0] NETFAIL[0 0 0 0 0 0 0 0] SYSTEMSTATU[Work: In Work, Hash Board: 3 ] Elapsed[1750] BOOTBY[0x0A.00000002] LW[1730255] MH[80 93 67] HW[240] DH[6.553%] Temp[23] TMax[88] TAvg[66] Fan1[3337] Fan2[3302] Fan3[3302] Fan4[3288] FanR[54%] Vo[310] PS[0 1197 1240 261 3239 1240] PLL0[8235 2234 1835 1616] PLL1[9161 2800 1641 318] PLL2[7297 2653 2197 1773] GHSspd[80521.10] DHspd[6.553%] GHSmm[86564.08] GHSavg[75781.50] WU[1058655.28] Freq[518.22] Led[0] MGHS[25280.59 24670.18 25830.72] MTmax[88 86 81] MTavg[68 62 67] TA[360] Core[A3201] PING[42] POWS[0] HASHS[0 0 0] POOLS[0] SoftOFF[0] ECHU[0 0 0] ECMM[0] SF0[504 524 544 564] SF1[504 524 544 564] SF2[504 524 544 564] PVT_T0[ 79  77  74  72  77  74  71  73  74  76  77  73  71  75  76  76  74  71  71  77  81  83  76  73  70  73  75  78  75  68  66  74  79  86  71  68  68  71  88  87  69  68  65  66  85  82  66  63  62  64  75  68  65  62  60  62  63  64  64  59  57  59  58  59  59  60  60  58  59  63  62  62  61  59  64  71  68  63  64  68  68  65  62  67  67  61  71  63  64  64  64  66  62  70  64  66  67  70  63  74  69  67  66  71  71  69  67  71  69  69  69  64  69  68  71  69  64  71  73  71] PVT_T1[ 61  62  71  69  65  61  62  62  67  66  65  60  62  66  70  68  64  64  68  66  64  70  69  65  64  68  70  67  86  62  64  66  67  65  68  65  66  67  66  65  65  67  64  69  66  64  67  63  63  64  63  63  61  59  58  61  63  63  59  56  57  54  54  52  55  57  57  55  57  59  56  58  57  62  60  68  61  62  59  63  67  61  60  64  60  59  57  59  58  64  64  56  56  60  59  62  64  60  62  61  61  61  58  59  58  56  59  58  59  59  63  59  60  59  60  62  59  58  62  62] PVT_T2[ 68  73  74  77  70  67  69  67  72  76  69  67  68  70  81  80  70  69  70  71  76  76  69  67  66  68  76  73  69  63  66  68  79  74  69  64  67  71  76  74  70  67  68  69  76  77  65  65  62  66  69  69  65  62  63  61  69  68  61  62  58  57  57  56  59  60  60  61  64  64  60  63  62  65  67  71  72  64  60  69  68  71  63  63  64  66  68  64  62  62  61  65  61  67  69  67  63  69  69  69  71  65  66  69  68  68  70  65  62  65  64  67  65  64  67  68  67  67  67  69] PVT_V0[281 287 290 285 286 286 286 285 287 282 279 277 275 274 274 277 281 282 278 278 275 275 279 283 283 282 282 285 282 283 287 290 292 278 283 286 282 283 288 282 285 286 281 283 278 283 289 287 293 291 291 290 291 293 290 298 294 290 287 292 291 292 290 287 290 297 285 291 295 295 298 294 281 283 285 274 275 283 288 288 292 290 297 297 282 289 290 290 293 293 271 275 278 273 274 283 289 289 294 289 289 287 288 286 285 292 293 292 289 290 292 271 281 283 270 278 285 277 282 288] PVT_V1[286 294 293 287 294 295 283 286 291 290 291 289 279 281 283 276 286 286 282 283 284 291 290 287 286 288 285 283 292 284 285 289 289 278 281 285 281 282 285 280 286 283 279 280 281 287 285 286 292 288 291 281 283 285 283 283 285 285 289 294 284 283 283 286 287 291 292 294 295 296 297 297 292 291 294 288 289 290 289 285 286 291 291 287 291 291 291 292 294 293 289 290 292 290 289 288 277 281 280 283 282 283 288 290 291 295 294 294 289 291 289 289 292 290 286 288 290 283 289 289] PVT_V2[291 293 297 286 281 275 285 282 277 281 283 286 278 279 281 286 289 289 286 287 281 279 274 273 273 277 278 275 283 282 279 279 271 288 281 279 276 274 268 287 281 278 292 292 289 276 280 286 275 277 278 282 283 286 283 287 284 278 282 286 301 296 293 283 284 286 291 294 294 293 293 291 297 290 295 293 294 294 282 283 292 281 290 286 302 297 297 294 294 294 292 290 290 293 292 287 277 278 282 271 275 276 277 275 283 291 292 291 291 293 297 288 289 288 291 290 283 292 289 290] MW[581853 581903 581986] MW0[72 92 84 86 108 102 73 98 86 89 78 91 54 76 91 83 77 67 82 68 83 90 82 75 72 77 73 87 77 70 88 91 82 85 81 86 61 69 89 86 77 68 61 84 76 104 98 66 80 89 82 107 95 83 84 67 90 73 89 90 101 84 92 97 97 88 86 90 71 107 96 92 70 76 84 89 83 55 86 104 94 82 86 88 83 70 84 98 95 103 69 88 90 81 82 60 82 86 83 89 76 95 81 95 96 93 75 101 96 78 85 88 58 89 76 93 81 64 98 84] MW1[70 75 89 87 75 93 90 66 105 75 80 99 98 65 72 91 43 91 93 62 84 86 86 84 93 76 85 39 106 87 74 95 76 78 82 78 84 84 72 88 78 83 59 52 78 95 84 58 49 94 91 105 87 87 75 80 81 93 76 87 100 79 57 88 106 92 95 64 85 77 73 87 79 83 87 103 55 90 55 90 105 87 53 95 101 80 80 79 71 94 104 71 64 72 76 103 71 87 72 81 97 83 68 98 101 108 84 86 89 84 78 71 77 52 86 87 85 68 95 87] MW2[88 107 95 78 101 85 66 100 87 85 77 82 70 68 83 104 86 73 86 100 103 80 74 88 83 89 84 92 78 79 70 71 72 91 76 75 68 65 71 77 110 88 94 82 75 66 85 66 75 67 94 104 76 85 100 61 98 97 89 89 85 84 85 72 79 93 97 70 87 87 73 105 93 110 83 85 103 87 97 87 76 105 67 83 101 95 93 100 97 85 88 94 89 87 86 95 95 100 88 54 88 82 79 90 79 95 98 77 100 85 90 82 92 83 90 75 82 98 68 106] ASICCRC0[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] ASICCRC1[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] ASICCRC2[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] CRC[0 0 0] POW_I2C[OK] FACOPTS0[] FACOPTS1[] ATAOPTS0[--avalon10-freq 504:524:544:564 --avalon10-voltage-level 39 ] ATAOPTS1[--avalon10-freq 504:524:544:564 --avalon10-voltage-level 35 ] ADJ[1] COP[0 0 0] MPO[3200] MVL[87] ATABD0[504 524 544 564] ATABD1[504 524 544 564] ATABD2[504 524 544 564] WORKMODE[1]","MM Count":1,"Smart Speed":1,"Voltage Level Offset":0,"Nonce Mask":25}],"id":1}"#;
        let stats: StatsResp = serde_json::from_str(resp).unwrap();
        let estats = EStats::try_from(&stats).unwrap();
    }
}
